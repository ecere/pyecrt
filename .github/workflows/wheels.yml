name: Build

on: [push, pull_request]

jobs:
  build_wheels:
    name: Build wheels on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        # os: [ubuntu-latest, ubuntu-24.04-arm, windows-latest, macos-13, macos-latest]
        # os: [ubuntu-latest]
        # os: [windows-latest]
        os: [ubuntu-latest, windows-latest]

    steps:
      - uses: actions/checkout@v4

      # Apply patch only on Windows
      - name: Apply header patch on Windows
        if: matrix.os == 'windows-latest'
        run: |
          # Patch MinGW-w64 header files currently causing troubles for eC compiler (C99 .namedmembers assignments in AVX files, and re-defnitions of function type typedef in winbase.h)
          #git apply --directory=mingw64 '${{ github.workspace }}\patches\mingw64-gcc-12.2.0-patches.patch'
          cd C:\
          copy ${{ github.workspace }}\patches\lib\gcc\x86_64-w64-mingw32\12.2.0\include\avx512fp16intrin.h C:\mingw64\lib\gcc\x86_64-w64-mingw32\12.2.0\include\avx512fp16intrin.h
          copy ${{ github.workspace }}\patches\lib\gcc\x86_64-w64-mingw32\12.2.0\include\avx512fp16vlintrin.h C:\mingw64\lib\gcc\x86_64-w64-mingw32\12.2.0\include\avx512fp16vlintrin.h
          copy ${{ github.workspace }}\patches\x86_64-w64-mingw32\include\winbase.h C:\mingw64\x86_64-w64-mingw32\include\winbase.h

      # Used to host cibuildwheel
      - uses: actions/setup-python@v5

      - name: Initialize submodules
        run: git submodule update --init --recursive

      - name: Install cibuildwheel
        run: python3 -m pip install cibuildwheel==2.23.3

      - name: Build wheels
        run: python3 -m cibuildwheel --output-dir wheelhouse
        env:
            # Windows PyPy 3.8 build is currently failing due to https://github.com/python-cffi/cffi/issues/170
            # 32-bit builds on Windows are not supported because the MinGW-w64 does not have multilib enabled
            # musllinux builds do not currently work
            # There seems to be setuptools-related issues with 3.6 and 3.7 CPython builds
            CIBW_SKIP: "cp36-* cp37-* *-musllinux* *-win32 pp*-win*"
            # This ensures WIN_SHELL_COMMANDS does not get defined on Windows in crossplatform.mk, which breaks deep directory creations
            # since commands are executed in a UNIX-like shell expecting 'mkdir -p'
            CIBW_ENVIRONMENT: "MSYSCON=y"
            CIBW_BUILD_VERBOSITY: 1

        #   CIBW_SOME_OPTION: value
        #   CIBW_BEFORE_BUILD: |
        #       python3 -c "print('setuptools version:', setuptools.__version__)"

      - uses: actions/upload-artifact@v4
        with:
          name: cibw-wheels-${{ matrix.os }}-${{ strategy.job-index }}
          path: ./wheelhouse/*.whl
